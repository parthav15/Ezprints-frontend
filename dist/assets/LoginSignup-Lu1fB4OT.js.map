{"version":3,"file":"LoginSignup-Lu1fB4OT.js","sources":["../../src/components/LoginSignup/LoginSignup.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './login.css';\r\nimport logo from '../../assets/images/logo.png';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BASE_URL } from '../../../config';\r\nimport emailSent from '../../assets/animations/emailSent.json'\r\nimport errorAnimation from '../../assets/animations/error.json'\r\nimport Popup from '../../screens/Popup/Popup'\r\n\r\nconst LoginForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [signupEmail, setSignupEmail] = useState('');\r\n  const [loginEmail, setLoginEmail] = useState('');\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const [loading, setloading] = useState(false);\r\n  const navigate = useNavigate()\r\n\r\n  const handleSwitchToSignup = () => setIsSignup(true);\r\n  const handleSwitchToLogin = () => setIsSignup(false);\r\n\r\n  const [isPopupOpen, setPopupOpen] = useState(false);\r\n  const [popupContent, setPopupContent] = useState({ animation: null, text: '' });\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      navigate('/home');\r\n    }\r\n  }, [navigate]);\r\n\r\n\r\n  const handleSignupLinkClick = (e) => {\r\n    e.preventDefault();\r\n    handleSwitchToSignup();\r\n  };\r\n\r\n  const handleLoginLinkClick = (e) => {\r\n    e.preventDefault();\r\n    handleSwitchToLogin();\r\n  };\r\n\r\n\r\n  const handleLoginSubmit = async(e) => {\r\n    e.preventDefault();\r\n    setloading(true);\r\n    const formData = new FormData();\r\n    formData.append('email', loginEmail);\r\n    localStorage.setItem('email', JSON.stringify(loginEmail));\r\n\r\n    try {\r\n      const response = await fetch(`${BASE_URL}login/`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n  \r\n      // Check if the response was successful\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n  \r\n        // Check the success message in the response data\r\n        if (data.success) { \r\n          setPopupContent({\r\n            animation: emailSent,\r\n            text: data.message,\r\n          });\r\n          setPopupOpen(true);\r\n          setTimeout(() => {\r\n            navigate('/getotp'); // Ensure you use a valid path here\r\n          }, 3000);\r\n        } else {\r\n          setPopupContent({\r\n            animation: errorAnimation, // Use an appropriate animation for error\r\n            text: data.message || 'An error occurred',\r\n          });\r\n          setPopupOpen(true);\r\n        }\r\n      } else {\r\n        // Handle server errors\r\n        const errorData = await response.json(); // Parse the error response\r\n        setPopupContent({\r\n          animation: errorAnimation,\r\n          text: 'Server error occurred. Please try again later.',\r\n        });\r\n        setPopupOpen(true);\r\n        console.log(\"Server Error:\",errorData.message)\r\n      }\r\n    } catch (error) {\r\n      setPopupContent({\r\n        animation: errorAnimation,\r\n        text: 'Network error occurred. Please check your connection and try again.',\r\n      });\r\n      setPopupOpen(true);\r\n      console.log(\"error:\",error)\r\n    }finally{\r\n      setloading(false);\r\n    }\r\n      \r\n  \r\n  };\r\n\r\n  const handleSignupSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setloading(true);\r\n    const formData = new FormData();\r\n    formData.append('name', name);\r\n    formData.append('email', signupEmail);\r\n    localStorage.setItem('email', JSON.stringify(signupEmail));\r\n  \r\n    try {\r\n      const response = await fetch(`${BASE_URL}register/`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n  \r\n      // Check if the response was successful\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n  \r\n        // Check the success message in the response data\r\n        if (data.success) { \r\n          setPopupContent({\r\n            animation: emailSent,\r\n            text: data.message,\r\n          });\r\n          setPopupOpen(true);\r\n          setTimeout(() => {\r\n            navigate('/getotp'); // Ensure you use a valid path here\r\n          }, 2000);\r\n        } else {\r\n          setPopupContent({\r\n            animation: errorAnimation, // Use an appropriate animation for error\r\n            text: data.message || 'An error occurred',\r\n          });\r\n          setPopupOpen(true);\r\n        }\r\n      } else {\r\n        // Handle server errors\r\n        const errorData = await response.json(); // Parse the error response\r\n        setPopupContent({\r\n          animation: errorAnimation,\r\n          text: 'Server error occurred. Please try again later.',\r\n        });\r\n        setPopupOpen(true);\r\n        console.log(\"Server Error:\",errorData.message)\r\n      }\r\n    } catch (error) {\r\n      setPopupContent({\r\n        animation: errorAnimation,\r\n        text: 'Network error occurred. Please check your connection and try again.',\r\n      });\r\n      setPopupOpen(true);\r\n      console.log(\"error:\",error)\r\n    }finally{\r\n      setloading(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"title-text\">\r\n          <div className={`title login ${!isSignup ? 'active' : ''} flex flex-col justify-center items-center`}>\r\n            <img style={{ width: '150px', height: '150px', objectFit: 'contain' }} src={logo} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-container\">\r\n          <div className=\"slide-controls\">\r\n            <input\r\n              type=\"radio\"\r\n              name=\"slide\"\r\n              id=\"login\"\r\n              checked={!isSignup}\r\n              onChange={handleSwitchToLogin}\r\n            />\r\n            <input\r\n              type=\"radio\"\r\n              name=\"slide\"\r\n              id=\"signup\"\r\n              checked={isSignup}\r\n              onChange={handleSwitchToSignup}\r\n            />\r\n            <label\r\n              htmlFor=\"login\"\r\n              className={`slide login ${!isSignup ? 'active' : ''}`}\r\n              onClick={handleSwitchToLogin}\r\n            >\r\n              Login\r\n            </label>\r\n            <label\r\n              htmlFor=\"signup\"\r\n              className={`slide signup ${isSignup ? 'active' : ''}`}\r\n              onClick={handleSwitchToSignup}\r\n            >\r\n              Signup\r\n            </label>\r\n            <div className=\"slider-tab\"></div>\r\n          </div>\r\n          <div className=\"form-inner\">\r\n            {!isSignup ? (\r\n              <form className=\"login\" onSubmit={handleLoginSubmit}>\r\n                <div className=\"field\">\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={loginEmail}\r\n                    onChange={(e) => setLoginEmail(e.target.value)}\r\n                    placeholder=\"Email Address\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"field btn\">\r\n                  <div className=\"btn-layer\"></div>\r\n                  {loading? <div class=\"loader\"></div> : <input type=\"submit\" value=\"Login\" />}\r\n                  \r\n                </div>\r\n                <div className=\"signup-link\">\r\n                  Not a member? <a href=\"#\" onClick={handleSignupLinkClick}>Signup now</a>\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <form className=\"signup\" onSubmit={handleSignupSubmit}>\r\n                <div className=\"field\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    placeholder=\"Name\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"field\">\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={signupEmail}\r\n                    onChange={(e) => setSignupEmail(e.target.value)}\r\n                    placeholder=\"Email Address\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"field btn\">\r\n                  <div className=\"btn-layer\"></div>\r\n                  {loading?<div className='loader'></div> : <input type=\"submit\" value=\"Signup\" />}\r\n                  \r\n                </div>\r\n                <div className=\"signup-link\">\r\n                  Already a member? <a href=\"#\" onClick={handleLoginLinkClick}>Login now</a>\r\n                </div>\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Popup\r\n        isOpen={isPopupOpen}\r\n        animation={popupContent.animation}\r\n        text={popupContent.text}\r\n        onclose={() => setPopupOpen(false)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"names":["LoginForm","name","setName","useState","signupEmail","setSignupEmail","loginEmail","setLoginEmail","isSignup","setIsSignup","loading","setloading","navigate","useNavigate","handleSwitchToSignup","handleSwitchToLogin","isPopupOpen","setPopupOpen","popupContent","setPopupContent","useEffect","handleSignupLinkClick","e","handleLoginLinkClick","handleLoginSubmit","formData","response","BASE_URL","data","emailSent","errorAnimation","errorData","error","handleSignupSubmit","jsxs","jsx","logo","Popup"],"mappings":"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"}